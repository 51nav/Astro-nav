---
interface Props {
  title: string;
  url: string;
}

const { title, url } = Astro.props;
---

<div class="qr-modal" id="qrModal">
  <div class="qr-content">
    <div class="qr-header">
      <h3>手机扫码访问</h3>
      <button class="close-button" id="closeQRCode">&times;</button>
    </div>
    <div class="qr-code" id="qrCode"></div>
    <div class="qr-info">
      <p class="qr-title">{title}</p>
    </div>
  </div>
</div>

<script>
  import QRCode from 'qrcode';

  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('qrModal');
    const showButton = document.getElementById('showQRCode');
    const closeButton = document.getElementById('closeQRCode');
    const qrContainer = document.getElementById('qrCode');
    
    const clearQRCode = () => {
      if (qrContainer) {
        while (qrContainer.firstChild) {
          qrContainer.removeChild(qrContainer.firstChild);
        }
      }
    };

    const generateQRCode = async () => {
      clearQRCode();
      
      if (qrContainer) {
        // 从卡片获取网站信息
        const siteTitle = document.querySelector('.site-title strong')?.textContent || '';
        const siteUrl = document.querySelector('.action-button.primary')?.getAttribute('href');
        
        console.log('Generating QR code for:', { siteUrl, siteTitle });

        if (!siteUrl || siteUrl === '#') {
          const message = document.createElement('div');
          message.style.padding = '2rem';
          message.style.color = '#666';
          message.textContent = '暂无可用链接';
          qrContainer.appendChild(message);
          return;
        }

        const canvas = document.createElement('canvas');
        await QRCode.toCanvas(canvas, siteUrl, {
          width: 200,
          margin: 2,
          color: {
            dark: '#2937f0',
            light: '#ffffff'
          }
        });

        const ctx = canvas.getContext('2d');
        if (ctx) {
          try {
            const domain = new URL(siteUrl).hostname;
            console.log('Loading favicon for domain:', domain);
            
            const img = new Image();
            img.crossOrigin = 'anonymous';
            img.src = `https://www.google.com/s2/favicons?domain=${domain}&sz=128`;
            
            img.onload = () => {
              console.log('Favicon loaded successfully');
              const logoSize = canvas.width * 0.2;
              const logoX = (canvas.width - logoSize) / 2;
              const logoY = (canvas.height - logoSize) / 2;
              
              ctx.fillStyle = 'white';
              ctx.fillRect(logoX - 2, logoY - 2, logoSize + 4, logoSize + 4);
              ctx.drawImage(img, logoX, logoY, logoSize, logoSize);
            };
            
            img.onerror = () => {
              // 使用卡片上的网站标题首字母
              console.log('Favicon load failed, using site title:', siteTitle);
              const firstLetter = siteTitle.trim().charAt(0).toUpperCase();
              console.log('Using first letter:', firstLetter);
              
              const logoSize = canvas.width * 0.2;
              const logoX = (canvas.width - logoSize) / 2;
              const logoY = (canvas.height - logoSize) / 2;
              
              ctx.fillStyle = '#2937f0';
              ctx.fillRect(logoX, logoY, logoSize, logoSize);
              
              ctx.fillStyle = 'white';
              ctx.font = `bold ${logoSize * 0.6}px Arial`;
              ctx.textAlign = 'center';
              ctx.textBaseline = 'middle';
              ctx.fillText(firstLetter, canvas.width * 0.5, canvas.height * 0.5);
            };
          } catch (error) {
            console.error('Error loading favicon:', error);
            // 出错时也使用卡片上的网站标题首字母
            const firstLetter = siteTitle.trim().charAt(0).toUpperCase();
            console.log('Error occurred, using first letter:', firstLetter);
            
            const logoSize = canvas.width * 0.2;
            const logoX = (canvas.width - logoSize) / 2;
            const logoY = (canvas.height - logoSize) / 2;
            
            ctx.fillStyle = '#2937f0';
            ctx.fillRect(logoX, logoY, logoSize, logoSize);
            
            ctx.fillStyle = 'white';
            ctx.font = `bold ${logoSize * 0.6}px Arial`;
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            ctx.fillText(firstLetter, canvas.width * 0.5, canvas.height * 0.5);
          }
        }

        qrContainer.appendChild(canvas);
      }
    };

    showButton?.addEventListener('click', () => {
      console.log('Show QR code button clicked');
      generateQRCode();
      modal?.style.setProperty('display', 'flex');
    });

    closeButton?.addEventListener('click', () => {
      console.log('Close QR code button clicked');
      modal?.style.setProperty('display', 'none');
      clearQRCode();
    });

    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        console.log('Modal background clicked');
        modal.style.setProperty('display', 'none');
        clearQRCode();
      }
    });
  });
</script>

<style>
  .qr-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  .qr-content {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    width: 90%;
    max-width: 320px;
    text-align: center;
  }

  .qr-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .qr-header h3 {
    margin: 0;
    color: #333;
  }

  .close-button {
    background: none;
    border: none;
    font-size: 1.5rem;
    color: #666;
    cursor: pointer;
    padding: 0.5rem;
  }

  .close-button:hover {
    color: #333;
  }

  .qr-code {
    margin: 1rem auto;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  .qr-info {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .qr-logo {
    width: 24px;
    height: 24px;
    border-radius: 4px;
  }

  .qr-title {
    margin: 0;
    color: #666;
  }
</style> 