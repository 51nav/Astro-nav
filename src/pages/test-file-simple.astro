---
import Layout from '../layouts/Layout.astro';
---

<Layout title="简单文件上传测试">
  <div style="max-width: 600px; margin: 2rem auto; padding: 2rem;">
    <h1>简单文件上传测试</h1>
    
    <form id="fileForm" enctype="multipart/form-data" style="background: #f5f5f5; padding: 2rem; border-radius: 8px; margin-bottom: 2rem;">
      <div style="margin-bottom: 1rem;">
        <label for="testFile">选择文件:</label>
        <input type="file" id="testFile" name="testFile" accept=".csv,.txt" required>
        <small style="display: block; margin-top: 0.5rem; color: #666;">
          请选择一个小的CSV或TXT文件进行测试
        </small>
      </div>
      
      <div style="margin-bottom: 1rem;">
        <label for="testName">测试名称:</label>
        <input type="text" id="testName" name="testName" value="File Upload Test" required>
      </div>
      
      <button type="submit" style="background: #007bff; color: white; padding: 0.5rem 1rem; border: none; border-radius: 4px;">
        上传测试
      </button>
    </form>
    
    <!-- 创建测试文件按钮 -->
    <div style="background: #e9ecef; padding: 1rem; border-radius: 8px; margin-bottom: 2rem;">
      <h3>没有测试文件？</h3>
      <button id="createTestFile" style="background: #28a745; color: white; padding: 0.5rem 1rem; border: none; border-radius: 4px;">
        创建测试CSV文件
      </button>
      <small style="display: block; margin-top: 0.5rem; color: #666;">
        点击按钮会创建并下载一个小的测试CSV文件
      </small>
    </div>
    
    <div id="result" style="padding: 1rem; background: #f8f9fa; border-radius: 4px; display: none;">
      <h3>测试结果:</h3>
      <pre id="resultContent" style="background: white; padding: 1rem; border-radius: 4px; overflow: auto; white-space: pre-wrap;"></pre>
    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById('fileForm') as HTMLFormElement;
  const result = document.getElementById('result') as HTMLElement;
  const resultContent = document.getElementById('resultContent') as HTMLElement;
  const createTestFile = document.getElementById('createTestFile') as HTMLButtonElement;
  
  // 创建测试文件
  createTestFile.addEventListener('click', () => {
    const csvContent = `name,age,city
John,25,New York
Jane,30,Los Angeles
Bob,35,Chicago`;
    
    const blob = new Blob([csvContent], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'test-data.csv';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
    
    alert('测试CSV文件已下载，请选择该文件进行上传测试');
  });
  
  function showResult(data: any, isError = false) {
    result.style.display = 'block';
    resultContent.style.color = isError ? 'red' : 'green';
    resultContent.textContent = JSON.stringify(data, null, 2);
  }
  
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    console.log('=== Client File Upload Test ===');
    
    const formData = new FormData(form);
    
    // 打印FormData内容
    console.log('FormData entries:');
    for (const [key, value] of formData.entries()) {
      if (value instanceof File) {
        console.log(`${key}:`, {
          name: value.name,
          size: value.size,
          type: value.type
        });
      } else {
        console.log(`${key}:`, value);
      }
    }
    
    try {
      console.log('Sending file upload request...');
      
      const response = await fetch('/api/test-file-simple', {
        method: 'POST',
        body: formData
        // 不设置Content-Type，让浏览器自动设置
      });
      
      console.log('Response status:', response.status);
      console.log('Response headers:', Object.fromEntries(response.headers.entries()));
      
      if (response.ok) {
        const data = await response.json();
        console.log('Success response:', data);
        showResult(data);
      } else {
        const errorData = await response.json();
        console.error('Error response:', errorData);
        showResult(errorData, true);
      }
      
    } catch (error) {
      console.error('Request failed:', error);
      showResult({ 
        error: 'Network Error', 
        message: error instanceof Error ? error.message : 'Unknown error',
        type: 'File Upload Failed'
      }, true);
    }
  });
</script>
</Layout>
