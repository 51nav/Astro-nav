---
// 定义默认分类选项
const allCategories = [
  { name: 'Affiliate工具', count: 0 },
  { name: '营销软件', count: 0 },
  { name: '数据分析', count: 0 },
  { name: '内容创作', count: 0 },
  { name: '社交媒体', count: 0 },
  { name: '电商平台', count: 0 },
  { name: '支付工具', count: 0 },
  { name: 'SEO工具', count: 0 },
  { name: '邮件营销', count: 0 },
  { name: '广告平台', count: 0 },
  { name: '设计工具', count: 0 },
  { name: '其他工具', count: 0 }
];
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>提交收录 - Affiliate导航</title>
  <meta name="description" content="提交您的Affiliate营销工具或资源，加入我们的导航网站。">
  <script src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"></script>
</head>
<body>
  <div class="layout">
    <!-- 简化的侧边栏 -->
    <aside class="sidebar">
      <div class="sidebar-content">
        <div class="logo-container">
          <div class="logo">
            <span class="logo-icon">A</span>
          </div>
          <h1 class="logo-text">Affiliate导航</h1>
          <p class="logo-subtitle">专业的Affiliate营销导航</p>
        </div>
        <nav class="nav-menu">
          <a href="/" class="nav-link">
            <iconify-icon icon="mdi:home"></iconify-icon>
            <span>首页</span>
          </a>
          <a href="/submit" class="nav-link active">
            <iconify-icon icon="mdi:plus-circle"></iconify-icon>
            <span>提交资源</span>
          </a>
          <a href="/about" class="nav-link">
            <iconify-icon icon="mdi:information"></iconify-icon>
            <span>关于我们</span>
          </a>
        </nav>
      </div>
    </aside>
    <main>
      <div class="top-nav">
        <div class="nav-links">
          <a href="/" class="nav-link">首页</a>
          <a href="/submit" class="nav-link active">提交收录</a>
        </div>
      </div>

      <div class="submit-container">
        <h1>Affiliate工具提交</h1>
        
        <div class="tabs">
          <button class="tab-button active" data-tab="website">网站</button>
          <button class="tab-button" data-tab="wechat">公众号</button>
          <button class="tab-button" data-tab="resource">资源</button>
        </div>

        <form class="tab-content active" id="website-form">
          <div class="form-group">
            <label>网站名称 *</label>
            <input type="text" name="website-name" required placeholder="请输入网站名称" />
          </div>

          <div class="form-group">
            <label>网站链接 *</label>
            <input type="url" name="website-url" required placeholder="https://example.com" />
          </div>

          <div class="form-group">
            <label>网站图标</label>
            <div class="upload-box">
              <input type="file" accept="image/*" id="website-icon" name="website-icon" hidden />
              <label for="website-icon" class="upload-trigger">
                <iconify-icon icon="mdi:cloud-upload" class="upload-icon"></iconify-icon>
                <span>点击上传图标</span>
              </label>
            </div>
          </div>

          <div class="form-group">
            <label>选择分类 *</label>
            <select name="website-category" required>
              <option value="">请选择分类</option>
              {allCategories.map(cat => (
                <option value={cat.name}>{cat.name} ({cat.count})</option>
              ))}
            </select>
          </div>

          <div class="form-group">
            <label>网站介绍</label>
            <textarea name="website-description" rows="4" placeholder="请输入网站介绍..."></textarea>
          </div>

          <button type="submit" class="submit-button">提交网站</button>
        </form>

        <form class="tab-content" id="wechat-form">
          <div class="form-group">
            <label>公众号名称 *</label>
            <input type="text" name="wechat-name" required placeholder="请输入公众号名称" />
          </div>

          <div class="form-group">
            <label>公众号ID</label>
            <input type="text" name="wechat-id" placeholder="请输入公众号ID（可选）" />
          </div>

          <div class="form-group">
            <label>公众号图标</label>
            <div class="upload-box">
              <input type="file" accept="image/*" id="wechat-icon" name="wechat-icon" hidden />
              <label for="wechat-icon" class="upload-trigger">
                <iconify-icon icon="mdi:cloud-upload" class="upload-icon"></iconify-icon>
                <span>点击上传图标</span>
              </label>
            </div>
          </div>

          <div class="form-group">
            <label>选择分类 *</label>
            <select name="wechat-category" required>
              <option value="">请选择分类</option>
              {allCategories.map(cat => (
                <option value={cat.name}>{cat.name} ({cat.count})</option>
              ))}
            </select>
          </div>

          <div class="form-group">
            <label>公众号二维码</label>
            <div class="upload-box">
              <input type="file" accept="image/*" id="wechat-qr" name="wechat-qr" hidden />
              <label for="wechat-qr" class="upload-trigger">
                <iconify-icon icon="mdi:cloud-upload" class="upload-icon"></iconify-icon>
                <span>点击上传二维码</span>
              </label>
            </div>
          </div>

          <div class="form-group">
            <label>公众号介绍</label>
            <textarea name="wechat-description" rows="4" placeholder="请输入公众号介绍..."></textarea>
          </div>

          <button type="submit" class="submit-button">提交公众号</button>
        </form>

        <form class="tab-content" id="resource-form">
          <div class="form-group">
            <label>资源名称 *</label>
            <input type="text" name="resource-name" required placeholder="请输入资源名称" />
          </div>

          <div class="form-group">
            <label>资源链接</label>
            <input type="url" name="resource-url" placeholder="https://example.com（可选）" />
          </div>

          <div class="form-group">
            <label>资源类型 *</label>
            <select name="resource-type" required>
              <option value="">请选择资源类型</option>
              <option value="tool">工具软件</option>
              <option value="template">模板素材</option>
              <option value="course">教程课程</option>
              <option value="ebook">电子书籍</option>
              <option value="other">其他资源</option>
            </select>
          </div>

          <div class="form-group">
            <label>资源图标</label>
            <div class="upload-box">
              <input type="file" accept="image/*" id="resource-icon" name="resource-icon" hidden />
              <label for="resource-icon" class="upload-trigger">
                <iconify-icon icon="mdi:cloud-upload" class="upload-icon"></iconify-icon>
                <span>点击上传图标</span>
              </label>
            </div>
          </div>

          <div class="form-group">
            <label>选择分类 *</label>
            <select name="resource-category" required>
              <option value="">请选择分类</option>
              {allCategories.map(cat => (
                <option value={cat.name}>{cat.name} ({cat.count})</option>
              ))}
            </select>
          </div>

          <div class="form-group">
            <label>资源介绍(使用说明)</label>
            <textarea name="resource-description" rows="4" placeholder="请输入资源介绍..."></textarea>
          </div>

          <button type="submit" class="submit-button">提交资源</button>
        </form>
      </div>
    </main>
  </div>
</body>
</html>

<style>
  /* 全局样式重置 */
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: #f6f6f6;
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
    line-height: 1.6;
    color: #333;
  }

  .layout {
    display: flex;
    min-height: 100vh;
  }

  /* 侧边栏样式 */
  .sidebar {
    position: fixed;
    left: 0;
    top: 0;
    width: 200px;
    height: 100vh;
    background: white;
    border-right: 1px solid #eaeaea;
    overflow-y: auto;
    z-index: 100;
  }

  .sidebar-content {
    padding: 1rem;
  }

  .logo-container {
    padding: 1rem 0 1.5rem 0;
    text-align: center;
    border-bottom: 1px solid #eaeaea;
    margin-bottom: 1rem;
  }

  .logo {
    width: 56px;
    height: 56px;
    margin: 0 auto 0.8rem;
    background: linear-gradient(135deg, #2937f0, #4e5ff3);
    border-radius: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(41, 55, 240, 0.2);
  }

  .logo-icon {
    color: white;
    font-size: 1.8rem;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
  }

  .logo-text {
    font-size: 1.1rem;
    color: #2937f0;
    margin: 0;
    font-weight: 600;
  }

  .logo-subtitle {
    font-size: 0.8rem;
    color: #666;
    margin: 0.4rem 0 0 0;
  }

  .nav-menu {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 0.8rem 1rem;
    color: #666;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
    font-size: 0.95rem;
  }

  .nav-link:hover {
    background: #f5f5f5;
    color: #2937f0;
  }

  .nav-link.active {
    background: #f0f2ff;
    color: #2937f0;
    font-weight: 500;
  }

  .nav-link iconify-icon {
    font-size: 1.2rem;
  }

  main {
    flex: 1;
    margin-left: 200px;
    padding: 2rem 0.5rem 2rem 1rem;
    width: calc(100% - 200px);
  }

  .top-nav {
    position: fixed;
    top: 0;
    right: 0;
    left: 200px;
    height: 60px;
    background: white;
    border-bottom: 1px solid #eaeaea;
    z-index: 100;
    padding: 0 1rem 0 1rem;
    display: flex;
    align-items: center;
  }

  .nav-links {
    display: flex;
    gap: 1.5rem;
  }

  .nav-link {
    color: #666;
    text-decoration: none;
    font-size: 0.95rem;
    padding: 0.5rem 0;
    transition: color 0.3s ease;
    position: relative;
  }

  .nav-link:hover,
  .nav-link.active {
    color: #2937f0;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: #2937f0;
    border-radius: 2px;
  }

  .submit-container {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    margin: 5rem 0 0 0;
    width: 100%;
    max-width: none;
  }

  h1 {
    color: #333;
    margin-bottom: 2rem;
    text-align: center;
  }

  .tabs {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
    border-bottom: 2px solid #eee;
    padding-bottom: 1rem;
  }

  .tab-button {
    background: none;
    border: none;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    color: #666;
    cursor: pointer;
    border-radius: 6px;
    transition: all 0.3s ease;
  }

  .tab-button.active {
    background: #2937f0;
    color: white;
  }

  .tab-button:hover:not(.active) {
    background: #f5f5f5;
    color: #2937f0;
  }

  .tab-content {
    display: none;
  }

  .tab-content.active {
    display: block;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    color: #333;
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  input, select, textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #eaeaea;
    border-radius: 6px;
    font-size: 1rem;
    outline: none;
    transition: border-color 0.3s ease;
    box-sizing: border-box;
  }

  input:focus, select:focus, textarea:focus {
    border-color: #2937f0;
  }

  input:invalid {
    border-color: #e74c3c;
  }

  .form-group.error input,
  .form-group.error select,
  .form-group.error textarea {
    border-color: #e74c3c;
  }

  .error-message {
    color: #e74c3c;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
  }

  .form-group.error .error-message {
    display: block;
  }

  .upload-box {
    border: 2px dashed #eaeaea;
    border-radius: 6px;
    padding: 2rem;
    text-align: center;
    transition: all 0.3s ease;
  }

  .upload-box:hover {
    border-color: #2937f0;
  }

  .upload-trigger {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    color: #666;
  }

  .upload-icon {
    font-size: 2rem;
    color: #2937f0;
  }

  .submit-button {
    background: #2937f0;
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 6px;
    font-size: 1rem;
    cursor: pointer;
    transition: background 0.3s ease;
    width: 100%;
  }

  .submit-button:hover:not(:disabled) {
    background: #4e5ff3;
  }

  .submit-button:disabled {
    background: #ccc;
    cursor: not-allowed;
  }

  .success-message {
    background: #d4edda;
    color: #155724;
    padding: 1rem;
    border-radius: 6px;
    margin-bottom: 1rem;
    border: 1px solid #c3e6cb;
    display: none;
  }

  .success-message.show {
    display: block;
  }

  @media (max-width: 768px) {
    main {
      margin-left: 0;
      max-width: 100%;
    }

    .top-nav {
      left: 0;
    }
  }
</style>

<script>
  // 处理标签切换
  const tabButtons = document.querySelectorAll('.tab-button');
  const tabContents = document.querySelectorAll('.tab-content');

  tabButtons.forEach(button => {
    button.addEventListener('click', () => {
      const tabId = button.getAttribute('data-tab');
      
      // 更新按钮状态
      tabButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      
      // 更新内容显示
      tabContents.forEach(content => {
        content.classList.remove('active');
        if (content.id === `${tabId}-form`) {
          content.classList.add('active');
        }
      });
    });
  });

  // 处理文件上传预览
  document.querySelectorAll('input[type="file"]').forEach(input => {
    input.addEventListener('change', function() {
      const fileInput = this;
      const file = fileInput.files && fileInput.files[0];

      if (file) {
        console.log('Selected file:', file.name);
        // 更新上传提示文字
        const uploadBox = fileInput.closest('.upload-box');
        const uploadTrigger = uploadBox && uploadBox.querySelector('.upload-trigger span');
        if (uploadTrigger) {
          uploadTrigger.textContent = `已选择: ${file.name}`;
        }
      }
    });
  });

  // 处理表单提交
  document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();

      const formType = this.id.replace('-form', '');

      // 基本验证
      const requiredFields = this.querySelectorAll('[required]');
      let isValid = true;

      requiredFields.forEach(field => {
        const formGroup = field.closest('.form-group');
        let fieldValue = '';

        // 安全获取字段值
        try {
          fieldValue = (field as any).value || '';
        } catch (e) {
          fieldValue = '';
        }

        if (formGroup) {
          if (!fieldValue.trim()) {
            formGroup.classList.add('error');
            isValid = false;
          } else {
            formGroup.classList.remove('error');
          }
        }
      });

      if (!isValid) {
        alert('请填写所有必填字段');
        return;
      }

      // 显示提交状态
      const submitButton = this.querySelector('.submit-button');
      if (submitButton) {
        const originalText = submitButton.textContent || '';
        submitButton.textContent = '提交中...';
        if (submitButton.tagName === 'BUTTON') {
          submitButton.setAttribute('disabled', 'true');
        }

        // 模拟提交过程
        setTimeout(() => {
          alert(`${formType === 'website' ? '网站' : formType === 'wechat' ? '公众号' : '资源'}提交成功！我们会尽快审核。`);

          // 重置表单
          this.reset();

          // 重置文件上传显示
          this.querySelectorAll('.upload-trigger span').forEach(span => {
            if (span.textContent && span.textContent.includes('已选择:')) {
              span.textContent = span.textContent.includes('图标') ? '点击上传图标' : '点击上传二维码';
            }
          });

          // 恢复按钮
          submitButton.textContent = originalText;
          if (submitButton.tagName === 'BUTTON') {
            submitButton.removeAttribute('disabled');
          }
        }, 2000);
      }
    });
  });

  // 实时验证
  document.querySelectorAll('input[required], select[required]').forEach(field => {
    field.addEventListener('blur', function() {
      const formGroup = this.closest('.form-group');
      let fieldValue = '';
      try {
        fieldValue = (this as any).value || '';
      } catch (e) {
        fieldValue = '';
      }

      if (formGroup) {
        if (!fieldValue.trim()) {
          formGroup.classList.add('error');
        } else {
          formGroup.classList.remove('error');
        }
      }
    });

    field.addEventListener('input', function() {
      const formGroup = this.closest('.form-group');
      let fieldValue = '';
      try {
        fieldValue = (this as any).value || '';
      } catch (e) {
        fieldValue = '';
      }

      if (formGroup && fieldValue.trim()) {
        formGroup.classList.remove('error');
      }
    });
  });
</script>